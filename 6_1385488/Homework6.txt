Assignment #6: Suffix Arrays and LCP

In this assignment you will read files containing text.

For each file, read the text into a string, convert to lower case and ignore all letters except a-z. However, you should keep a mapping from the original file into the converted string so that you can output answers to the following question:

For k=2, 3, ..., 10, what is the longest string that occurs k times?

You may use and/or modify the SuffixArray.java code to compute suffix arrays and LCPs.

As usual, submit complete source code (in a Netbeans folder, ready to run), along with output for the files I will provide.

For example, if this input file is

Thank Sally for me. This was a test
of the output for this assignment.
THINK hard.
Have a happy Thanksgiving.

Output would look something like

Longest sequence that occurs 2 times has basic length 6 and is is thanks
Line 1: Thank S
Line 4: Thanks

Longest sequence that occurs 3 times has basic length 3 and is thi
Line 1: Thi
Line 2: thi
Line 3: THI

...

As usual, if the basic length is longer than 50 characters, output the first 20 characters, then ..., then the last 20 characters.  Note also that there may be no string that occurs k times for a large k. Your code should handle that.

Available from: 	Thursday, 21 November 2013, 12:05 AM
Due date: 	Thursday, 5 December 2013, 12:30 PM
